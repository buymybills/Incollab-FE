name: Docker CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
    types: [opened, synchronize, reopened]

env:
  REGISTRY: docker.io
  IMAGE_NAME: buymybills/incollab-fe

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.draft == false)
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: buymybills
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            buymybills/incollab-fe:latest
            buymybills/incollab-fe:${{ github.sha }}
          cache-from: type=registry,ref=buymybills/incollab-fe:buildcache
          cache-to: type=registry,ref=buymybills/incollab-fe:buildcache,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Setup Server Environment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Install required packages
            sudo apt-get update -y
            sudo apt-get install -y docker.io nginx
            sudo systemctl enable --now docker
            sudo usermod -aG docker $USER
            sudo chmod 666 /var/run/docker.sock

            # Setup Nginx files
            sudo mkdir -p /usr/share/nginx/html
            sudo tee /usr/share/nginx/html/403.html > /dev/null << 'EOF'
            <html><head><title>Mobile Only</title><style>body{font-family:Arial;margin:40px;text-align:center}</style></head><body><h1>Mobile Only</h1><p>Please use a mobile device to access this site.</p><p><a href="/terms">Terms</a> | <a href="/privacy-policy">Privacy</a></p></body></html>
            EOF

            # Create Nginx config
            sudo tee /etc/nginx/sites-available/incollab-fe > /dev/null << 'EOF'
            server {
                listen 80;
                server_name collabkaroo.buymybills.in;
                location /health { return 200 "healthy"; }
                location ~ ^/(terms|privacy-policy)$ {
                    proxy_pass http://localhost:3000;
                    proxy_set_header Host $host;
                }
                location / {
                    if ($http_user_agent !~* "mobile|android|iphone|ipad|phone") { return 403; }
                    proxy_pass http://localhost:3000;
                    proxy_set_header Host $host;
                }
                error_page 403 /403.html;
                location = /403.html {
                    root /usr/share/nginx/html;
                    internal;
                }
            }
            EOF

            # Enable site and restart Nginx
            sudo ln -sf /etc/nginx/sites-available/incollab-fe /etc/nginx/sites-enabled/
            sudo rm -f /etc/nginx/sites-enabled/default
            sudo nginx -t && sudo systemctl restart nginx

            sudo ln -sf /etc/nginx/sites-available/incollab-fe /etc/nginx/sites-enabled/
            sudo rm -f /etc/nginx/sites-enabled/default
            sudo nginx -t && sudo systemctl reload nginx

      - name: Deploy Docker Container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Deploying new container..."
            docker pull buymybills/incollab-fe:latest

            docker stop incollab-fe || true
            docker rm incollab-fe || true

            docker run -d \
              --name incollab-fe \
              --restart unless-stopped \
              -p 3000:3000 \
              -e NODE_ENV=production \
              -e HOSTNAME="0.0.0.0" \
              buymybills/incollab-fe:latest

            docker system prune -f

            echo "Verifying container status..."
            docker ps | grep incollab-fe && echo "Container running successfully!"
