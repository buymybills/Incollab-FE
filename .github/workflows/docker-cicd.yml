name: Docker CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
    types: [opened, synchronize, reopened]

env:
  REGISTRY: docker.io
  IMAGE_NAME: buymybills/incollab-fe

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.draft == false)
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: buymybills
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            buymybills/incollab-fe:latest
            buymybills/incollab-fe:${{ github.sha }}
          cache-from: type=registry,ref=buymybills/incollab-fe:buildcache
          cache-to: type=registry,ref=buymybills/incollab-fe:buildcache,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Setup Server Environment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Checking Docker installation..."
            if ! command -v docker &>/dev/null; then
              sudo apt-get update -y
              sudo apt-get install -y docker.io
              sudo systemctl enable --now docker
              sudo usermod -aG docker $USER
              sudo chmod 666 /var/run/docker.sock
            fi

            echo "Checking Nginx installation..."
            if ! command -v nginx &>/dev/null; then
              sudo apt-get install -y nginx
            fi

            echo "Creating Nginx error pages and config..."
            sudo mkdir -p /usr/share/nginx/html

            cat <<'HTML' | sudo tee /usr/share/nginx/html/403.html > /dev/null
<!DOCTYPE html>
<html>
<head>
  <title>Mobile App Only</title>
  <style>
    body { font-family: Arial, sans-serif; margin: 40px; text-align: center; }
    a { color: #007bff; text-decoration: none; margin: 0 10px; }
  </style>
</head>
<body>
  <h1>Mobile App Only</h1>
  <p>This application is designed for mobile devices only.</p>
  <p><a href="/terms">Terms and Conditions</a> | <a href="/privacy-policy">Privacy Policy</a></p>
</body>
</html>
HTML

            cat <<'NGINX' | sudo tee /etc/nginx/sites-available/incollab-fe > /dev/null
server {
    listen 80;
    server_name collabkaroo.buymybills.in;

    access_log /var/log/nginx/incollab-access.log;
    error_log /var/log/nginx/incollab-error.log;

    location /health {
        return 200 "healthy\n";
    }

    # Allow /terms and /privacy-policy
    location ~ ^/(terms|privacy-policy)$ {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Block non-mobile browsers for other routes
    location / {
        if ($http_user_agent !~* "(android|iphone|ipad|ipod|blackberry|iemobile|kindle|mobile|silk|opera mini)") {
            return 403;
        }

        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    error_page 403 /403.html;
    location = /403.html {
        root /usr/share/nginx/html;
        internal;
    }
}
NGINX

            sudo ln -sf /etc/nginx/sites-available/incollab-fe /etc/nginx/sites-enabled/
            sudo rm -f /etc/nginx/sites-enabled/default
            sudo nginx -t && sudo systemctl reload nginx

      - name: Deploy Docker Container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Deploying new container..."
            docker pull buymybills/incollab-fe:latest

            docker stop incollab-fe || true
            docker rm incollab-fe || true

            docker run -d \
              --name incollab-fe \
              --restart unless-stopped \
              -p 3000:3000 \
              -e NODE_ENV=production \
              -e HOSTNAME="0.0.0.0" \
              buymybills/incollab-fe:latest

            docker system prune -f

            echo "Verifying container status..."
            docker ps | grep incollab-fe && echo "Container running successfully!"
